spring.profiles.active=${SPRING_PROFILE:dev}
logging.level.org.springframework.security=${SECURITY_LOG:INFO}

my.saltSecret = ${salt:e71c707b4191cbef}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:propostas}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)

management.endpoint.health.show-details=${MANAGEMENTE_ENDPOINT:always}
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:dev}

## spring security resource server configuration
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://${KEY_CLOAK_URL:localhost:18080}/auth/realms/propostas}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://${KEY_CLOAK_URL:localhost:18080}/auth/realms/propostas/protocol/openid-connect/certs}
